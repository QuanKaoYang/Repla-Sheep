{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/taskpane/taskpane.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","myPref","setInitialPref","document","getElementById","useHL","checked","matchCase","wildCard","annotator","scol","tcol","xlhead","slang","tlang","claerPref","localStorage","removeItem","pre1","pre2","pre3","logs","setPrefVal","ev","label","target","setItem","JSON","stringify","setPrefBool","setPrefPre","texts","showReplace","style","display","classList","add","remove","showPreference","closeProcessing","handleDragEnter","stopPropagation","preventDefault","handleDragOver","readFileAndRep","repFile","substr","length","readCTSVFile","readXLSXFile","toUpperCase","Number","readTBXFile","delimiter","fr","FileReader","myAnnotator","RegExp","readAsText","onload","repPairs","result","replace","delim","lines","split","line","eachTerm","test","push","executeReplace","reptext","xlsxFile","header","zip","JSZip","rangeColA","rangeColB","loadAsync","then","inzip","folder","file","async","xml","sharedStrings","DOMParser","parseFromString","allstrings","siNodes","getElementsByTagName","siNode","textInSiNode","tNodes","tNode","parentNode","localName","textContent","rowNodes","counter","rowNode","cellNodes","gotA","gotB","avalue","bvalue","cellNode","cellRange","getAttribute","firstChild","join","termPair","termEntries","termEntry","langSetNodes","langSetNode","filename","sortedPairs","sort","a","b","innerText","disabled","termTableBody","rows","deleteRow","repPair","row","createElement","st","tt","appendChild","Promise","resolve","Word","run","context","searchResults","body","search","matchcase","useWildcard","wildcard","load","sync","j","items","insertText","String","afterReplace","HLcolor","font","highlightColor","Office","onReady","info","host","HostType","requirements","isSetSupported","ondragover","ondragenter","ondrop","dataTransfer","files","handleDrop","onchange","handleClick","onclick","readFromTextarea","callPrevious","inPref","getItem","parse","loadPref"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,K,gVC7ErD,IAAIC,EA2EJ,SAASC,IACPC,SAASC,eAAe,UAAUlB,MAAQe,EAAOI,MACjDF,SAASC,eAAe,iBAAiBE,QAAUL,EAAOM,UAC1DJ,SAASC,eAAe,gBAAgBE,QAAUL,EAAOO,SACzDL,SAASC,eAAe,iBAAiBE,QAAUL,EAAOQ,UAC1DN,SAASC,eAAe,WAAWlB,MAAQe,EAAOS,KAClDP,SAASC,eAAe,WAAWlB,MAAQe,EAAOU,KAClDR,SAASC,eAAe,aAAalB,MAAQe,EAAOW,OACpDT,SAASC,eAAe,aAAalB,MAAQe,EAAOY,MACpDV,SAASC,eAAe,aAAalB,MAAQe,EAAOa,MAKtD,SAASC,IACPC,aAAaC,WAAW,UACxBhB,EAlCO,CACHI,MAAQ,OACRE,WAAW,EACXC,UAAU,EACVC,WAAW,EACXC,KAAM,IACNC,KAAM,IACNC,OAAQ,IACRC,MAAO,WACPC,MAAO,QACPI,KAAO,GACPC,KAAO,GACPC,KAAO,GACPC,KAAM,IAsBVnB,IAgBF,SAASoB,EAAWC,EAAIC,GACtBvB,EAAOuB,GAASD,EAAGE,OAAOvC,MAC1B8B,aAAaU,QAAQ,SAAUC,KAAKC,UAAU3B,IAIhD,SAAS4B,EAAYN,GACnBtB,EAAOsB,EAAGE,OAAOvC,QAAUe,EAAOsB,EAAGE,OAAOvC,OAC5C8B,aAAaU,QAAQ,SAAUC,KAAKC,UAAU3B,IAIhD,SAAS6B,EAAWC,GAClB9B,EAAOmB,KAAOnB,EAAOkB,KACrBlB,EAAOkB,KAAOlB,EAAOiB,KACrBjB,EAAOiB,KAAOa,EACdf,aAAaU,QAAQ,SAAUC,KAAKC,UAAU3B,IAgBhD,SAAS+B,IACP7B,SAASC,eAAe,iBAAiB6B,MAAMC,QAAU,OACzD/B,SAASC,eAAe,sBAAsB6B,MAAMC,QAAU,OAC9D/B,SAASC,eAAe,oBAAoB6B,MAAMC,QAAU,QAC5D/B,SAASC,eAAe,gBAAgB+B,UAAUC,IAAI,cACtDjC,SAASC,eAAe,gBAAgB+B,UAAUE,OAAO,gBACzDlC,SAASC,eAAe,mBAAmB+B,UAAUC,IAAI,gBACzDjC,SAASC,eAAe,mBAAmB+B,UAAUE,OAAO,cAI9D,SAASC,IACPnC,SAASC,eAAe,oBAAoB6B,MAAMC,QAAU,OAC5D/B,SAASC,eAAe,sBAAsB6B,MAAMC,QAAU,OAC9D/B,SAASC,eAAe,iBAAiB6B,MAAMC,QAAU,QACzD/B,SAASC,eAAe,gBAAgB+B,UAAUC,IAAI,gBACtDjC,SAASC,eAAe,gBAAgB+B,UAAUE,OAAO,cACzDlC,SAASC,eAAe,mBAAmB+B,UAAUC,IAAI,cACzDjC,SAASC,eAAe,mBAAmB+B,UAAUE,OAAO,gBAI9D,SAASE,IACPpC,SAASC,eAAe,sBAAsB6B,MAAMC,QAAU,OAC9D/B,SAASC,eAAe,OAAO6B,MAAMC,QAAU,QAKjD,SAASM,EAAgBjB,GACvBA,EAAGkB,kBACHlB,EAAGmB,iBAIL,SAASC,EAAepB,GACtBA,EAAGkB,kBACHlB,EAAGmB,iBAmBL,SAASE,EAAeC,GAEtB,OADkBA,EAAQrE,KAAKsE,OAAOD,EAAQrE,KAAKuE,OAAS,EAAG,IAE7D,IAAK,OACHC,EAAaH,EAAS,KACtB,MAEF,IAAK,OACHG,EAAaH,EAAS,MACtB,MAEF,IAAK,Q,0CAGHI,CAAaJ,EAFA5C,EAAOS,KAAKwC,cACZjD,EAAOU,KAAKuC,cACSC,OAAOlD,EAAOW,SAChD,MAEF,IAAK,Q,wCACHwC,CAAYP,EAAS5C,EAAOY,MAAOZ,EAAOa,Q,SAUjCkC,E,qFAAf,WAA4BH,EAASQ,GAArC,wFACQC,EAAK,IAAIC,WACTC,EAAc,IAAIC,OAAO,kBAC/BH,EAAGI,WAAWb,GACdS,EAAGK,OAAS,WACV,IAAMC,EAAW,GACb7B,EAAQuB,EAAGO,OAAOC,QAAQ,SAAU,MAExC,GAAkB,OAAdT,EAAoB,CACtB,IAAMU,EAAQ,IAAIN,OAAOJ,EAAW,KACpCtB,EAAQA,EAAM+B,QAAQC,EAAO,MAG/BjC,EAAWC,GAEX,IAAIiC,EAAQjC,EAAMkC,MAAM,MAXR,uBAYhB,YAAiBD,EAAjB,+CAAwB,KAAfE,EAAe,QACtB,GAAa,KAATA,EAAa,CACf,IAAMC,EAAWD,EAAKD,MAAM,MACR,KAAhBE,EAAS,IAA6B,KAAhBA,EAAS,KAC5BX,EAAYY,KAAKD,EAAS,KAC7BP,EAASS,KAAKH,EAAKD,MAAM,UAjBjB,kFAuBhBK,EAAeV,EAAUf,EAAQrE,OA3BrC,4C,uEAiCA,WAAgC+C,GAAhC,+GACEA,EAAGkB,kBACHlB,EAAGmB,iBAEY,KADX6B,EAAUpE,SAASC,eAAe,WAAWlB,MAAM4E,QAAQ,SAAU,OAH3E,iDAeE,IARMN,EAAc,IAAIC,OAAO,kBACzBG,EAAW,GAIjB9B,EAFIC,EAAQwC,EAAQT,QAAQ,MAAO,OAI/BE,EAAQjC,EAAMkC,MAAM,MAd1B,6BAeE,EAAiBD,EAAjB,+CACe,MADNE,EAAe,UAGA,MADhBC,EAAWD,EAAKD,MAAM,OACb,IAA6B,KAAhBE,EAAS,KAC5BX,EAAYY,KAAKD,EAAS,KAC7BP,EAASS,KAAKH,EAAKD,MAAM,QApBnC,0OA0BEK,EAAeV,EAAU,iBA1B3B,8E,uEA+BA,WAA4BY,EAAU9D,EAAMC,EAAM8D,GAAlD,4FACQC,EAAM,IAAIC,MACVf,EAAW,GAEXgB,EAAY,IAAInB,OAAO,IAAM/C,EAAO,WACpCmE,EAAY,IAAIpB,OAAO,IAAM9C,EAAO,WAE1C+D,EAAII,UAAUN,GAAUO,MAAK,SAACC,GAC5BA,EAAMC,OAAO,OAAOC,KAAK,qBAAqBC,MAAM,UAAUJ,MAAK,SAACK,GAElE,IAAMC,GAAiB,IAAIC,WAAaC,gBAAgBH,EAAK,mBACvDI,EAAa,GACbC,EAAUJ,EAAcK,qBAAqB,MAJuB,uBAK1E,YAAmBD,EAAnB,+CAA4B,KAAnBE,EAAmB,QACtBC,EAAe,GACbC,EAASF,EAAOD,qBAAqB,KAFjB,uBAG1B,YAAkBG,EAAlB,+CAA0B,KAAjBC,EAAiB,QACW,QAA/BA,EAAMC,WAAWC,YACnBJ,GAAgBE,EAAMG,cALA,kFAQ1BT,EAAWnB,KAAKuB,IAbwD,kFAgB1EZ,EAAMC,OAAO,kBAAkBC,KAAK,cAAcC,MAAM,UAAUJ,MAAK,SAACK,GACtE,IAEMc,GAFO,IAAIZ,WAAaC,gBAAgBH,EAAK,mBAE9BM,qBAAqB,OACtCS,GAAW,EAJ+D,uBAQ9E,YAAoBD,EAApB,+CAA8B,KAArBE,EAAqB,QAE5B,OADAD,EACc1B,GAAd,CAGA,IAAM4B,EAAYD,EAAQV,qBAAqB,KAC3CY,GAAO,EACPC,GAAO,EACPC,EAAS,GACTC,EAAS,GATe,uBAU5B,YAAqBJ,EAArB,+CAAgC,KAAvBK,EAAuB,QAC9B,GAAIJ,GAAQC,EACV,MAEF,IAAMI,EAAYD,EAASE,aAAa,KACnCN,EAKOC,GACN1B,EAAUT,KAAKuC,IAA6C,MAA/BD,EAASE,aAAa,OACrDH,EAASjB,EAAWrC,OAAOuD,EAASG,WAAWZ,cAC/CM,GAAO,EACP3C,EAASS,KAAK,CAACmC,EAAQC,KARrB7B,EAAUR,KAAKuC,IAA6C,MAA/BD,EAASE,aAAa,OACrDJ,EAAShB,EAAWrC,OAAOuD,EAASG,WAAWZ,cAC/CK,GAAO,IAlBe,qFARgD,kFAsC9E,IAAIvE,EAAQ,GAtCkE,uBAuC9E,YAAiB6B,EAAjB,+CAA2B,CACzB7B,GADyB,QACX+E,KAAK,MAAQ,MAxCiD,kFA2C9EhF,EAAWC,GAEXuC,EAAeV,EAAUY,EAAShG,eArE1C,4C,uEA6EA,WAA2BqE,EAAShC,EAAOC,GAA3C,wFACQ8C,EAAW,IACXN,EAAK,IAAIC,YACZG,WAAWb,GACdS,EAAGK,OAAS,WACV,IAGIoD,EAHE3B,EAAM9B,EAAGO,OAETmD,GADe,IAAI1B,WAAaC,gBAAgBH,EAAK,mBAC3BM,qBAAqB,QAAQ,GAAGA,qBAAqB,QAAQ,GAAGA,qBAAqB,aAHrG,uBAKhB,YAAsBsB,EAAtB,+CAAmC,KAA1BC,EAA0B,QACjCF,EAAW,CAAC,GAAI,IAChB,IAAMG,EAAeD,EAAUvB,qBAAqB,WAFnB,uBAGjC,YAAwBwB,EAAxB,+CAAsC,KAA7BC,EAA6B,QAEpC,OADeA,EAAYP,aAAa,aAEtC,KAAK/F,EACHkG,EAAS,GAAKI,EAAYzB,qBAAqB,OAAO,GAAGA,qBAAqB,QAAQ,GAAGO,YACzF,MAEF,KAAKnF,EACHiG,EAAS,GAAKI,EAAYzB,qBAAqB,OAAO,GAAGA,qBAAqB,QAAQ,GAAGO,YAM7F,GAAoB,KAAhBc,EAAS,IAA6B,KAAhBA,EAAS,GAAW,CAC5CnD,EAASS,KAAK0C,GACd,QAnB6B,oFALnB,kFA4BhB,IAAIhF,EAAQ,GA5BI,uBA6BhB,YAAiB6B,EAAjB,+CAA2B,CACzB7B,GADyB,QACX+E,KAAK,MAAQ,MA9Bb,kFAgChBhF,EAAWC,GACXuC,EAAeV,EAAUf,EAAQrE,OArCrC,4C,+BA0Ce8F,E,qFAAf,WAA8BV,EAAUwD,GAAxC,0GAaE,IAXIC,EAAczD,EAAS0D,MAAK,SAACC,EAAGC,GAClC,OAAID,EAAE,GAAGxE,OAASyE,EAAE,GAAGzE,QAAgB,EACnCwE,EAAE,GAAGxE,OAASyE,EAAE,GAAGzE,OAAe,EAC/B,KAGT5C,SAASC,eAAe,mBAAmBqH,UAAY,gBACvDtH,SAASC,eAAe,mBAAmBqH,UAAYL,EACvDjH,SAASC,eAAe,gBAAgBsH,SAAW,OAC7CC,EAAgBxH,SAASC,eAAe,WAEvCuH,EAAcC,KAAK,IACxBD,EAAcE,UAAU,GAG1B,IAjBF,4BAiBE,EAAoBR,EAApB,+CAASS,EAAwB,QAC3BC,EAAM5H,SAAS6H,cAAc,MAC7BC,EAAK9H,SAAS6H,cAAc,MAC5BE,EAAK/H,SAAS6H,cAAc,MAChCC,EAAGhC,YAAc6B,EAAQ,GACzBI,EAAGjC,YAAc6B,EAAQ,GACzBC,EAAII,YAAYF,GAChBF,EAAII,YAAYD,GAChBP,EAAcQ,YAAYJ,GAzB9B,yOA4BE5H,SAASC,eAAe,OAAO6B,MAAMC,QAAU,OAC/C/B,SAASC,eAAe,sBAAsB6B,MAAMC,QAAU,QAE5C,IAAIkG,SAAQ,SAAAC,GAC5BC,KAAKC,IAAL,4CAAS,WAAMC,GAAN,kGACEvK,EAAI,EADN,YACSA,EAAIoJ,EAAYtE,QADzB,wBAED0F,EAAgBD,EAAQrI,SAASuI,KAAKC,OAAOtB,EAAYpJ,GAAG,GAAI,CAAEsC,UAAWN,EAAO2I,UAAWC,YAAa5I,EAAO6I,YACzGC,KAAK,QAHd,SAICP,EAAQQ,OAJT,OAKL,IAASC,EAAI,EAAGA,EAAIR,EAAcS,MAAMnG,OAAQkG,IAC9CR,EAAcS,MAAMD,GAAGE,WAAW,KAAOC,OAAOnL,GAAK,KAAM,WANxD,OACiCA,IADjC,wCASDuK,EAAQQ,OATP,QAUE/K,EAAI,EAVN,aAUSA,EAAIoJ,EAAYtE,QAVzB,wBAWD0F,EAAgBD,EAAQrI,SAASuI,KAAKC,OAAO,KAAOS,OAAOnL,GAAK,KAAM,CAAEsC,UAAWN,EAAO2I,UAAWC,YAAa5I,EAAO6I,YAC/GC,KAAK,CAAC,OAAQ,SAZvB,UAaCP,EAAQQ,OAbT,QAcL,GAAIP,EAAcS,MAAMnG,OAAS,EAG/B,IAFMsG,EAAepJ,EAAOQ,UAAY,KAAO2I,OAAOnL,GAAK,KAAOoJ,EAAYpJ,GAAG,GAAK,QAAUoJ,EAAYpJ,GAAG,GACzGqL,EAA2B,SAAjBrJ,EAAOI,MAAmB,KAAOJ,EAAOI,MAC/C4I,EAAI,EAAGA,EAAIR,EAAcS,MAAMnG,OAAQkG,IAC9CR,EAAcS,MAAMD,GAAGE,WAAWE,EAAc,WAChDZ,EAAcS,MAAMD,GAAGM,KAAKC,eAAiBF,EAnB5C,QAUiCrL,IAVjC,yCAuBDuK,EAAQQ,OAvBP,QAwBPX,IAxBO,4CAAT,0DA4BQtD,MAAK,WACb5E,SAASC,eAAe,gBAAgBsH,SAAW,GACnDvH,SAASC,eAAe,mBAAmBqH,UAAY,eA9D3D,6E,sBA1YAgC,OAAOC,SAAQ,SAAAC,GAOTA,EAAKC,OAASH,OAAOI,SAASvB,MAAQmB,OAAOjB,QAAQsB,aAAaC,eAAe,UAAW,SAC9F5J,SAASC,eAAe,WAAW6B,MAAMC,QAAU,OACnD/B,SAASC,eAAe,OAAO6B,MAAMC,QAAU,QAE/C/B,SAASC,eAAe,aAAa4J,WAAarH,EAClDxC,SAASC,eAAe,aAAa6J,YAAczH,EACnDrC,SAASC,eAAe,aAAa8J,OAAS,SAAA3I,GAAE,OA2JpD,SAAoBA,GAClBA,EAAGkB,kBACHlB,EAAGmB,iBACHE,EAAerB,EAAG4I,aAAaC,MAAM,IA9JiBC,CAAW9I,IAC/DpB,SAASC,eAAe,kBAAkBkK,SAAW,SAAA/I,GAAE,OAiK3D,SAAqBA,GACnBA,EAAGkB,kBACHlB,EAAGmB,iBACHE,EAAerB,EAAGE,OAAO2I,MAAM,IApK8BG,CAAYhJ,IACvEpB,SAASC,eAAe,iBAAiBoK,QAAU,SAAAjJ,GAAE,O,2CAAIkJ,CAAiBlJ,IAC1EpB,SAASC,eAAe,aAAaoK,QAAUzJ,EAC/CZ,SAASC,eAAe,gBAAgBoK,QAAUxI,EAClD7B,SAASC,eAAe,mBAAmBoK,QAAUlI,EACrDnC,SAASC,eAAe,gBAAgBoK,QAAUjI,EAElDpC,SAASC,eAAe,UAAUkK,SAAW,SAAA/I,GAAE,OAAID,EAAWC,EAAI,UAClEpB,SAASC,eAAe,iBAAiBkK,SAAW,SAAA/I,GAAE,OAAIM,EAAYN,IACtEpB,SAASC,eAAe,gBAAgBkK,SAAW,SAAA/I,GAAE,OAAIM,EAAYN,IACrEpB,SAASC,eAAe,iBAAiBkK,SAAW,SAAA/I,GAAE,OAAIM,EAAYN,IACtEpB,SAASC,eAAe,gBAAgBkK,SAAW,SAAA/I,GAAE,OAgGzD,SAAsBA,GACpBpB,SAASC,eAAe,WAAWlB,MAAQe,EAAOsB,EAAGE,OAAOvC,OAjGDwL,CAAanJ,IACtEpB,SAASC,eAAe,WAAWkK,SAAW,SAAA/I,GAAE,OAAID,EAAWC,EAAI,SACnEpB,SAASC,eAAe,WAAWkK,SAAW,SAAA/I,GAAE,OAAID,EAAWC,EAAI,SACnEpB,SAASC,eAAe,aAAakK,SAAW,SAAA/I,GAAE,OAAID,EAAWC,EAAI,WACrEpB,SAASC,eAAe,aAAakK,SAAW,SAAA/I,GAAE,OAAID,EAAWC,EAAI,UACrEpB,SAASC,eAAe,aAAakK,SAAW,SAAA/I,GAAE,OAAID,EAAWC,EAAI,UAErEtB,EAoDJ,WACE,IAAI0K,EAEFA,EADqC,OAAnC3J,aAAa4J,QAAQ,UACdjJ,KAAKkJ,MAAM7J,aAAa4J,QAAQ,WA3CpC,CACHvK,MAAQ,OACRE,WAAW,EACXC,UAAU,EACVC,WAAW,EACXC,KAAM,IACNC,KAAM,IACNC,OAAQ,IACRC,MAAO,WACPC,MAAO,QACPI,KAAO,GACPC,KAAO,GACPC,KAAO,GACPC,KAAM,IAkCV,OAAOsJ,EA3DIG,GACT5K","file":"taskpane.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 307);\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n * See LICENSE in the project root for license information.\r\n */\r\n\r\nvar myPref;\r\nvar indev = false;\r\n\r\n// 開発環境で状態を表示させるための関数\r\nfunction wlp(log, overwrite) {\r\n  if (overwrite) {\r\n    document.getElementById(\"console\").innerText = log;\r\n  } else {\r\n    document.getElementById(\"console\").innerText += \"\\n\" + log;\r\n  }\r\n}\r\n\r\n// 初期設定\r\nOffice.onReady(info => {\r\n  // indevがtrueな時は、状態表示用のフッターを見えるようにする\r\n  if (indev) {\r\n    document.getElementById(\"console\").style.display = \"block\";\r\n    wlp(\"read started\", true);\r\n  }\r\n  // Wordが対応していない場合、sorryページを返す\r\n  if (info.host === Office.HostType.Word && Office.context.requirements.isSetSupported('WordApi', '1.1')) {\r\n    document.getElementById(\"non-app\").style.display = \"none\";\r\n    document.getElementById(\"app\").style.display = \"block\";\r\n    // 置換ペインのイベントリスナーの設定をする\r\n    document.getElementById(\"drop-zone\").ondragover = handleDragOver;\r\n    document.getElementById(\"drop-zone\").ondragenter = handleDragEnter;\r\n    document.getElementById(\"drop-zone\").ondrop = ev => handleDrop(ev);\r\n    document.getElementById(\"select-repfile\").onchange = ev => handleClick(ev);\r\n    document.getElementById(\"from-textarea\").onclick = ev => readFromTextarea(ev);\r\n    document.getElementById(\"resetPref\").onclick = claerPref;\r\n    document.getElementById(\"show-replace\").onclick = showReplace;\r\n    document.getElementById(\"show-preference\").onclick = showPreference;\r\n    document.getElementById(\"replace-done\").onclick = closeProcessing;\r\n    // 環境設定のイベントリスナーを設定する\r\n    document.getElementById(\"use-HL\").onchange = ev => setPrefVal(ev, \"useHL\");\r\n    document.getElementById(\"use-matchcase\").onchange = ev => setPrefBool(ev);\r\n    document.getElementById(\"use-wildcard\").onchange = ev => setPrefBool(ev);\r\n    document.getElementById(\"use-annotator\").onchange = ev => setPrefBool(ev);\r\n    document.getElementById(\"use-previous\").onchange = ev => callPrevious(ev);\r\n    document.getElementById(\"xl-scol\").onchange = ev => setPrefVal(ev, \"scol\");\r\n    document.getElementById(\"xl-tcol\").onchange = ev => setPrefVal(ev, \"tcol\");\r\n    document.getElementById(\"xl-header\").onchange = ev => setPrefVal(ev, \"xlhead\");\r\n    document.getElementById(\"tbx-slang\").onchange = ev => setPrefVal(ev, \"slang\");\r\n    document.getElementById(\"tbx-tlang\").onchange = ev => setPrefVal(ev, \"tlang\");\r\n    // 環境設定の読み込み\r\n    myPref = loadPref();\r\n    setInitialPref();\r\n\r\n    if (indev) {\r\n      document.getElementById(\"console\").style.display = \"block\";\r\n      wlp(\"read finished\", true);\r\n    }\r\n  }\r\n});\r\n\r\n// デフォルト設定を呼び出す用の関数\r\nfunction defaultPref() {\r\n  return {\r\n      useHL : \"null\",\r\n      matchCase: true,\r\n      wildCard: false,\r\n      annotator: false,\r\n      scol: \"A\",\r\n      tcol: \"B\",\r\n      xlhead: \"0\",\r\n      slang: \"ja-jp-jp\",\r\n      tlang: \"zh-cn\",\r\n      pre1 : \"\",\r\n      pre2 : \"\",\r\n      pre3 : \"\",\r\n      logs: \"\",\r\n  }\r\n}\r\n\r\n// 初期設定を画面に反映させるための関数\r\nfunction setInitialPref(){\r\n  document.getElementById(\"use-HL\").value = myPref.useHL;\r\n  document.getElementById(\"use-matchcase\").checked = myPref.matchCase;\r\n  document.getElementById(\"use-wildcard\").checked = myPref.wildCard;\r\n  document.getElementById(\"use-annotator\").checked = myPref.annotator;\r\n  document.getElementById(\"xl-scol\").value = myPref.scol;\r\n  document.getElementById(\"xl-tcol\").value = myPref.tcol;\r\n  document.getElementById(\"xl-header\").value = myPref.xlhead;\r\n  document.getElementById(\"tbx-slang\").value = myPref.slang;\r\n  document.getElementById(\"tbx-tlang\").value = myPref.tlang;\r\n}\r\n\r\n// #環境設定関連\r\n// デフォルト設定に戻すための関数\r\nfunction claerPref(){\r\n  localStorage.removeItem('myPref');\r\n  myPref = defaultPref();\r\n  setInitialPref();\r\n}\r\n\r\n// ローカルストレージから環境設定を呼び出す関数\r\n// ローカルストレージに保存されていない場合はデフォルト設定を呼び出す\r\nfunction loadPref() {\r\n  let inPref\r\n  if (localStorage.getItem(\"myPref\") !== null) {\r\n    inPref = JSON.parse(localStorage.getItem(\"myPref\"))\r\n  } else {\r\n    inPref = defaultPref()\r\n  }\r\n  return inPref\r\n}\r\n\r\n// 環境設定を画面とオブジェクトに反映する関数１ 文字列用\r\nfunction setPrefVal(ev, label){\r\n  myPref[label] = ev.target.value\r\n  localStorage.setItem(\"myPref\", JSON.stringify(myPref));\r\n}\r\n\r\n// 環境設定を画面とオブジェクトに反映する関数２ ブーリアン用\r\nfunction setPrefBool(ev){\r\n  myPref[ev.target.value] = !myPref[ev.target.value]\r\n  localStorage.setItem(\"myPref\", JSON.stringify(myPref));\r\n}\r\n\r\n// 環境設定に置換履歴を保存しておくための関数\r\nfunction setPrefPre(texts){\r\n  myPref.pre3 = myPref.pre2;\r\n  myPref.pre2 = myPref.pre1;\r\n  myPref.pre1 = texts;\r\n  localStorage.setItem(\"myPref\", JSON.stringify(myPref));\r\n}\r\n\r\n// 環境設定にログを記録しておく関数\r\nfunction setPrefLog(obj) {\r\n  myPref.logs += obj\r\n  localStorage.setItem(\"myPref\", JSON.stringify(myPref));\r\n}\r\n\r\n// 環境設定から置換履歴を呼び出す関数\r\nfunction callPrevious(ev) {\r\n  document.getElementById(\"reptext\").value = myPref[ev.target.value];\r\n}\r\n\r\n// #画面表示関連\r\n// 置換ペインを呼び出す\r\nfunction showReplace() {\r\n  document.getElementById(\"pref-division\").style.display = \"none\"\r\n  document.getElementById(\"replacing-division\").style.display = \"none\"\r\n  document.getElementById(\"replace-division\").style.display = \"block\"\r\n  document.getElementById(\"show-replace\").classList.add(\"tab-active\")\r\n  document.getElementById(\"show-replace\").classList.remove(\"tab-inactive\")\r\n  document.getElementById(\"show-preference\").classList.add(\"tab-inactive\")\r\n  document.getElementById(\"show-preference\").classList.remove(\"tab-active\")\r\n}\r\n\r\n// 環境設定ペインを呼び出す\r\nfunction showPreference() {\r\n  document.getElementById(\"replace-division\").style.display = \"none\"\r\n  document.getElementById(\"replacing-division\").style.display = \"none\"\r\n  document.getElementById(\"pref-division\").style.display = \"block\"\r\n  document.getElementById(\"show-replace\").classList.add(\"tab-inactive\")\r\n  document.getElementById(\"show-replace\").classList.remove(\"tab-active\")\r\n  document.getElementById(\"show-preference\").classList.add(\"tab-active\")\r\n  document.getElementById(\"show-preference\").classList.remove(\"tab-inactive\")\r\n}\r\n\r\n// 置換実行中の画面を閉じる\r\nfunction closeProcessing() {\r\n  document.getElementById(\"replacing-division\").style.display = \"none\";\r\n  document.getElementById(\"app\").style.display = \"block\";\r\n}\r\n\r\n// #置換実行関連\r\n// ドラッグの処理\r\nfunction handleDragEnter(ev) {\r\n  ev.stopPropagation();\r\n  ev.preventDefault();\r\n}\r\n\r\n// ドラッグの処理\r\nfunction handleDragOver(ev) {\r\n  ev.stopPropagation();\r\n  ev.preventDefault();\r\n}\r\n\r\n// ドロップの処理\r\nfunction handleDrop(ev) {\r\n  ev.stopPropagation();\r\n  ev.preventDefault();\r\n  readFileAndRep(ev.dataTransfer.files[0])\r\n}\r\n\r\n// クリックの処理\r\nfunction handleClick(ev) {\r\n  ev.stopPropagation();\r\n  ev.preventDefault();\r\n  readFileAndRep(ev.target.files[0])\r\n}\r\n\r\n// ドロップまたはクリックから呼び出す関数\r\n// ファイルの拡張子から、読込関数を呼び出す\r\nfunction readFileAndRep(repFile) {\r\n  const extension = repFile.name.substr(repFile.name.length - 4, 4)\r\n  switch (extension) {\r\n    case \".csv\":\r\n      readCTSVFile(repFile, \",\")\r\n      break;\r\n\r\n    case \".tsv\":\r\n      readCTSVFile(repFile, \"\\t\")\r\n      break;\r\n\r\n    case \"xlsx\":\r\n      const scol = myPref.scol.toUpperCase();\r\n      const tcol = myPref.tcol.toUpperCase();\r\n      readXLSXFile(repFile, scol, tcol, Number(myPref.xlhead));\r\n      break;\r\n\r\n    case \".tbx\":\r\n      readTBXFile(repFile, myPref.slang, myPref.tlang)\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\n// CSV/TSVを読み込む関数\r\n// 読込結果をexecuteReplaceに渡す\r\nasync function readCTSVFile(repFile, delimiter) {\r\n  const fr = new FileReader;\r\n  const myAnnotator = new RegExp(\"^[0-9_/\\[\\\\\\]]+$\");\r\n  fr.readAsText(repFile);\r\n  fr.onload = () => {\r\n    const repPairs = [];\r\n    let texts = fr.result.replace(/\\r?\\n/g, \"\\n\");\r\n    // CSVの場合はカンマをタブに変換しておく\r\n    if (delimiter !== \"\\t\") {\r\n      const delim = new RegExp(delimiter, \"g\")\r\n      texts = texts.replace(delim, \"\\t\")\r\n    }\r\n    // 置換履歴にセット\r\n    setPrefPre(texts);\r\n    // 置換実行のための二次元配列をつくる\r\n    let lines = texts.split(\"\\n\");\r\n    for (let line of lines) {\r\n      if (line !== \"\") {\r\n        const eachTerm = line.split(\"\\t\");\r\n        if (eachTerm[0] !== \"\" && eachTerm[1] !== \"\") {\r\n          if (!myAnnotator.test(eachTerm[0])) {\r\n            repPairs.push(line.split(\"\\t\"));\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // 置換の実行\r\n    executeReplace(repPairs, repFile.name);\r\n  }\r\n}\r\n\r\n// テキストエリアから読み込む関数\r\n// 読込結果をexecuteReplaceに渡す\r\nasync function readFromTextarea(ev) {\r\n  ev.stopPropagation();\r\n  ev.preventDefault();\r\n  let reptext = document.getElementById(\"reptext\").value.replace(/\\r?\\n/g, \"\\n\");\r\n  if (reptext == \"\") {\r\n    return;\r\n  }\r\n  const myAnnotator = new RegExp(\"^[0-9_/\\[\\\\\\]]+$\");\r\n  const repPairs = [];\r\n  // ::をタブに変換しておく\r\n  let texts = reptext.replace(/::/g, \"\\t\");\r\n  // 置換履歴にセット\r\n  setPrefPre(texts);\r\n  // 置換実行のための二次元配列をつくる\r\n  let lines = texts.split(\"\\n\");\r\n  for (let line of lines) {\r\n    if (line !== \"\") {\r\n      let eachTerm = line.split(\"\\t\");\r\n      if (eachTerm[0] !== \"\" && eachTerm[1] !== \"\") {\r\n        if (!myAnnotator.test(eachTerm[0])) {\r\n          repPairs.push(line.split(\"\\t\"));\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // 置換の実行\r\n  executeReplace(repPairs, \"From TextArea\");\r\n}\r\n\r\n// Excelから読み込む関数\r\n// 読込結果をexecuteReplaceに渡す\r\nasync function readXLSXFile(xlsxFile, scol, tcol, header) {\r\n  const zip = new JSZip();\r\n  const repPairs = [];\r\n  // 環境設定から原文列・訳文列を設定\r\n  const rangeColA = new RegExp(\"^\" + scol + \"[0-9]+$\");\r\n  const rangeColB = new RegExp(\"^\" + tcol + \"[0-9]+$\");\r\n  // zipの中身を読み込む。sheet1のみ\r\n  zip.loadAsync(xlsxFile).then((inzip) => {\r\n    inzip.folder(\"xl/\").file(\"sharedStrings.xml\").async(\"string\").then((xml) => {\r\n      // sharedStringから文字列を読み込み、allstringsに格納する\r\n      const sharedStrings = (new DOMParser()).parseFromString(xml, \"application/xml\");\r\n      const allstrings = [];\r\n      const siNodes = sharedStrings.getElementsByTagName(\"si\");\r\n      for (let siNode of siNodes) {\r\n        let textInSiNode = \"\";\r\n        const tNodes = siNode.getElementsByTagName(\"t\");\r\n        for (let tNode of tNodes) {\r\n          if (tNode.parentNode.localName !== \"rPh\") {\r\n            textInSiNode += tNode.textContent;\r\n          }\r\n        }\r\n        allstrings.push(textInSiNode);\r\n      }\r\n      // sheet1のファイルを読み込む\r\n      inzip.folder(\"xl/worksheets/\").file(\"sheet1.xml\").async(\"string\").then((xml) => {\r\n        const wsx = (new DOMParser()).parseFromString(xml, \"application/xml\");\r\n        // rowのノードコレクション\r\n        const rowNodes = wsx.getElementsByTagName(\"row\");\r\n        let counter = -1;\r\n        // rowごとに処理を実行\r\n        // 原文列・訳文列のみ、SharedStringの対応番号を読み込む\r\n        // allstringsと照らし合わせて、二次元配列repPairsに格納していく\r\n        for (let rowNode of rowNodes) {\r\n          counter++;\r\n          if (counter < header) {\r\n            continue;\r\n          }\r\n          const cellNodes = rowNode.getElementsByTagName(\"c\");\r\n          let gotA = false;\r\n          let gotB = false;\r\n          let avalue = \"\";\r\n          let bvalue = \"\";\r\n          for (let cellNode of cellNodes) {\r\n            if (gotA && gotB) {\r\n              break;\r\n            }\r\n            const cellRange = cellNode.getAttribute(\"r\");\r\n            if (!gotA) {\r\n              if (rangeColA.test(cellRange) && cellNode.getAttribute(\"t\") === \"s\") {\r\n                avalue = allstrings[Number(cellNode.firstChild.textContent)];\r\n                gotA = true;\r\n              }\r\n            } else if (!gotB) {\r\n              if (rangeColB.test(cellRange) && cellNode.getAttribute(\"t\") === \"s\") {\r\n                bvalue = allstrings[Number(cellNode.firstChild.textContent)];\r\n                gotB = true;\r\n                repPairs.push([avalue, bvalue]);\r\n              }\r\n            }\r\n          }\r\n        }\r\n        // 置換履歴にセットするため、タグ・改行区切りの文字列に変換\r\n        let texts = \"\";\r\n        for (let pair of repPairs) {\r\n          texts += pair.join(\"\\t\") + \"\\n\";\r\n        }\r\n        // 置換履歴にセット\r\n        setPrefPre(texts);\r\n        // 置換の実行\r\n        executeReplace(repPairs, xlsxFile.name);\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n// TBXからの読み込み\r\n// 読込結果をexecuteReplaceに渡す\r\nasync function readTBXFile(repFile, slang, tlang) {\r\n  const repPairs = [];\r\n  const fr = new FileReader;\r\n  fr.readAsText(repFile);\r\n  fr.onload = () => {\r\n    const xml = fr.result;\r\n    const tbxContents = (new DOMParser()).parseFromString(xml, \"application/xml\");\r\n    const termEntries = tbxContents.getElementsByTagName(\"text\")[0].getElementsByTagName(\"body\")[0].getElementsByTagName(\"termEntry\");\r\n    let termPair;\r\n    for (let termEntry of termEntries) {\r\n      termPair = [\"\", \"\"]\r\n      const langSetNodes = termEntry.getElementsByTagName(\"langSet\")\r\n      for (let langSetNode of langSetNodes) {\r\n        const locale = langSetNode.getAttribute(\"xml:lang\")\r\n        switch (locale) {\r\n          case slang:\r\n            termPair[0] = langSetNode.getElementsByTagName(\"tig\")[0].getElementsByTagName(\"term\")[0].textContent  \r\n            break;\r\n          \r\n          case tlang:\r\n            termPair[1] = langSetNode.getElementsByTagName(\"tig\")[0].getElementsByTagName(\"term\")[0].textContent\r\n            break;\r\n        \r\n          default:\r\n            break;\r\n        }\r\n        if (termPair[0] !== \"\" && termPair[1] !== \"\") {\r\n          repPairs.push(termPair);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    let texts = \"\";\r\n    for (let pair of repPairs) {\r\n      texts += pair.join(\"\\t\") + \"\\n\";\r\n    }\r\n    setPrefPre(texts);\r\n    executeReplace(repPairs, repFile.name);\r\n  }\r\n}\r\n\r\n// 置換の実行\r\nasync function executeReplace(repPairs, filename) {\r\n  // 原文の長さに応じて配列をソートし、sortedPairsをつくる\r\n  let sortedPairs = repPairs.sort((a, b) => {\r\n    if (a[0].length > b[0].length) return -1;\r\n    if (a[0].length < b[0].length) return 1;\r\n    return 0;\r\n  })\r\n  // 実行中画面の準備\r\n  document.getElementById(\"processing-mess\").innerText = \"Processing...\";\r\n  document.getElementById(\"processing-file\").innerText = filename;\r\n  document.getElementById(\"replace-done\").disabled = \"true\";\r\n  const termTableBody = document.getElementById(\"term-bd\")\r\n  // 過去の原文・訳文用語を消しておく\r\n  while (termTableBody.rows[0]){\r\n    termTableBody.deleteRow(0);\r\n  } \r\n  // 原文・訳文用語をテーブルにセット\r\n  for (let repPair of sortedPairs) {\r\n    let row = document.createElement(\"tr\");\r\n    let st = document.createElement(\"td\");\r\n    let tt = document.createElement(\"td\");\r\n    st.textContent = repPair[0];\r\n    tt.textContent = repPair[1];\r\n    row.appendChild(st);\r\n    row.appendChild(tt);\r\n    termTableBody.appendChild(row);\r\n  }\r\n  // 表示の切り替え\r\n  document.getElementById(\"app\").style.display = \"none\";\r\n  document.getElementById(\"replacing-division\").style.display = \"block\";\r\n  // 置換の実行。プロミスを作る\r\n  const replacing = new Promise(resolve => {\r\n    Word.run(async context => {\r\n      for (let i = 0; i < sortedPairs.length; i++) {\r\n        let searchResults = context.document.body.search(sortedPairs[i][0], { matchCase: myPref.matchcase, useWildcard: myPref.wildcard });\r\n        searchResults.load(\"text\");\r\n        await context.sync()\r\n        for (var j = 0; j < searchResults.items.length; j++) {\r\n          searchResults.items[j].insertText(\"[_\" + String(i) + \"_]\", \"Replace\")\r\n        }\r\n      }\r\n      await context.sync()\r\n      for (let i = 0; i < sortedPairs.length; i++) {\r\n        let searchResults = context.document.body.search(\"[_\" + String(i) + \"_]\", { matchCase: myPref.matchcase, useWildcard: myPref.wildcard });\r\n        searchResults.load([\"text\", \"font\"]);\r\n        await context.sync()\r\n        if (searchResults.items.length > 0) {\r\n          const afterReplace = myPref.annotator ? \"<_\" + String(i) + \"_>\" + sortedPairs[i][1] + \"<_/_>\" : sortedPairs[i][1];\r\n          const HLcolor = myPref.useHL === \"null\" ? null : myPref.useHL;\r\n          for (var j = 0; j < searchResults.items.length; j++) {\r\n            searchResults.items[j].insertText(afterReplace, \"Replace\")\r\n            searchResults.items[j].font.highlightColor = HLcolor;\r\n          }\r\n        }\r\n      }\r\n      await context.sync();\r\n      resolve();\r\n      })\r\n    })\r\n  // プロミスが解決したら、doneボタンを押せるようにし、Finishedと表示させる\r\n  replacing.then(() => {\r\n    document.getElementById(\"replace-done\").disabled = \"\";\r\n    document.getElementById(\"processing-mess\").innerText = \"Finished!\";\r\n  })\r\n}\r\n\r\n"],"sourceRoot":""}